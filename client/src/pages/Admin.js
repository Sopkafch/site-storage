  import React, { useState, useEffect } from 'react';
  import { storage, downloadFile, user, uploadFile, dellFile, dellUser } from "../api/router";
  import './css/admin.css';
  import UserRegistrationForm from './UserRegistrationForm';

  function Admin() { 
    const [files, setFiles] = useState([]); // —Ñ–∞–ª—ã
    const [error, setError] = useState(null); // –æ—à–∏–±–∫–∞
    const [loading, setLoading] = useState(true); // –∑–∞–≥—Ä—É–∑–∫–∞
    const [search, setSearch] = useState(''); // –ø–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    const [users, setUsers] = useState('') // –ø–æ—å–∑–æ–≤–∞—Ç–µ–ª–∏

    const [isModalOpen, setIsModalOpen] = useState(false); // —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 

    useEffect(() => {
      const file = async () => {
        try {
          const res = await storage();
          const users = await user();
          
          setUsers(users)

          if (res) {
            setLoading(false);
          }
          setFiles(res);

        } catch (err) {
          if (err.response?.status === 401 || 403) {
            window.location.href = '/login';
          } else {
            setError('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
          }
        }
      };
      file();
    }, []);

    const uploadfile = async(event) => {
      const file = event.target.files[0]
      
      const formData = new FormData();
      formData.append('file', file);

      const files = await uploadFile(formData)
      setFiles(files)
    }

    const dellfile = async(id) => {
      try{
        const files = await dellFile(id)
        setFiles(files)
      }catch(e){
        console.log(e)
      }
    }


    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –∏–º–µ–Ω–∏
    const filteredFiles = files.filter(file => // (.filter - –∫–∞–∫ .map) –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç: "–ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç files –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ file –∏ –µ—Å–ª–∏ –æ–Ω –±—É–¥–µ—Ç = true —Ç–æ –∑–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –≤ filteredFiles"
      file.originalName.toLowerCase().includes(search.toLowerCase()) // –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç: "–µ—Å–ª–∏ file.originalName.—Å_–Ω–∏–∂–Ω–∏–º_—Ä–µ–≥–∏—Å—Ç—Ä–æ–º –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è search.—Å_–Ω–∏–∂–Ω–∏–º_—Ä–µ–≥–∏—Å—Ç—Ä–æ–º —Ç–æ true"
    );


    const userDell = async(id) => {
      const users = await dellUser(id)
      setUsers(users)
    }

    if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

    return (
      <div className="main-layout">
        <aside className="sidebar">
          <h3>üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>

          {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <button className="btn-add-user" onClick={() => setIsModalOpen(true)}> 
            –î–æ–±–∞–≤–∏—Ç—å
          </button>

          {/*              –§–û–†–ú–ê               */}

          {isModalOpen && (
            <UserRegistrationForm 
              onClose={() => setIsModalOpen(false)} 
              onUserAdded={(updatedUsers) => setUsers(updatedUsers)} 
            />
          )}


          {/*              –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò               */}
          <ul className="user-list">
            {users.length > 0 ? (
              users.map(user => (
                <li key={user.id} className="user-item">
                  {user.email}
                  <button className="btn-delete-user" onClick={() => userDell(user.id)}>–£–¥–∞–ª–∏—Ç—å</button>

                </li>
              ))
            ) : (
              <p>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
            )}
          </ul>
        </aside>


        {/*              –§–ê–ô–õ–´               */}   
        <div className="storage-container">
          <h2>üìÇ –§–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:</h2>

          <div className="upload-section">
            <label className="upload-label">
              –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
              <input type="file" onChange={uploadfile} hidden />
            </label>
          </div>

          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />

          {error && <p className="error">{error}</p>}

          <ul className="file-list">
            {filteredFiles.length > 0 ? (
              filteredFiles.map(file => (
                <li key={file.id} className="file-item">
                  <span className="file-name">üìÑ {file.originalName}</span>
                  <div className="file-actions">
                    <button className="btn-download" onClick={() => downloadFile(file.id)}>‚¨á –°–∫–∞—á–∞—Ç—å</button>
                    <button className="btn-delete" onClick={() => dellfile(file.id)}>üóë –£–¥–∞–ª–∏—Ç—å</button>
                  </div>
                </li>
              ))
            ) : (
              <p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
            )}
          </ul>
        </div>
      </div>
    );
  }

  export default Admin;


  /*

    –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —à–∞–≥–∞–º:

    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ <input>
      ‚Üí onChange —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
      ‚Üí setSearch(e.target.value) –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ search.

    React –≤–∏–¥–∏—Ç, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (search) –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
      ‚Üí –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Storage.

    –í–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏:
      –°–Ω–æ–≤–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è filteredFiles = files.filter(...), –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤–Ω—É—Ç—Ä–∏ —Ç–µ–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
      JSX –≤ return —Å–Ω–æ–≤–∞ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è, —É–∂–µ —Å –Ω–æ–≤—ã–º filteredFiles.
      –ò—Ç–æ–≥: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–º—É search.

  */
